import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as i,e as c,d as t,a as n,f as l,r as g,o as d,g as p}from"./app-DcDROiZE.js";const s={};function m(S,e){const o=g("RouteLink");return d(),r("div",null,[e[1]||(e[1]=i("<p>每个微信小程序都可以有自己的本地缓存，可以通过 <code>wx.setStorage</code> / <code>wx.setStorageSync</code>、<code>wx.getStorage</code> / <code>wx.getStorageSync</code>、<code>wx.clearStorage</code> / <code>wx.clearStorageSync</code>，<code>wx.removeStorage</code> / <code>wx.removeStorageSync</code> 对本地缓存进行读写和清理。</p><p>同一个微信用户，同一个小程序 storage 上限为 10MB。Storage 以用户维度隔离，同一台设备上，A 用户无法读取到 B 用户的数据。</p>",2)),c(" more "),e[2]||(e[2]=t("h2",{id:"api-文档",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#api-文档"},[t("span",null,"API 文档")])],-1)),t("ul",null,[t("li",null,[n(o,{to:"/code/mini-app/guide/service/api/storage.html"},{default:l(()=>e[0]||(e[0]=[p("点击前往")])),_:1})])]),e[3]||(e[3]=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"提示"),t("p",null,"如果用户储存空间不足，我们会清空最近最久未使用的小程序的本地缓存。我们不建议将关键信息全部存在 storage，以防储存空间不足或用户换设备的情况。")],-1))])}const h=a(s,[["render",m],["__file","storage.html.vue"]]),y=JSON.parse('{"path":"/code/mini-app/guide/ability/storage.html","title":"存储","lang":"zh-CN","frontmatter":{"date":"2020-10-09T00:00:00.000Z","title":"存储","icon":"storage","category":"小程序","description":"每个微信小程序都可以有自己的本地缓存，可以通过 wx.setStorage / wx.setStorageSync、wx.getStorage / wx.getStorageSync、wx.clearStorage / wx.clearStorageSync，wx.removeStorage / wx.removeStorageSync 对本地缓存进行...","head":[["meta",{"property":"og:url","content":"https://liaorenhua.github.io/blog_postgraduate/blog_postgraduate/code/mini-app/guide/ability/storage.html"}],["meta",{"property":"og:site_name","content":"𝓛𝓮𝓸 𝓑𝓛𝓸𝓖"}],["meta",{"property":"og:title","content":"存储"}],["meta",{"property":"og:description","content":"每个微信小程序都可以有自己的本地缓存，可以通过 wx.setStorage / wx.setStorageSync、wx.getStorage / wx.getStorageSync、wx.clearStorage / wx.clearStorageSync，wx.removeStorage / wx.removeStorageSync 对本地缓存进行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-07T02:58:54.000Z"}],["meta",{"property":"article:published_time","content":"2020-10-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-07T02:58:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"存储\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-10-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-07T02:58:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leo\\",\\"url\\":\\"https://liaorenhua.github.io/blog_postgraduate/\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://liaorenhua.github.io/blog_postgraduate/blog_postgraduate/atom.xml","title":"𝓛𝓮𝓸 𝓑𝓛𝓸𝓖 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://liaorenhua.github.io/blog_postgraduate/blog_postgraduate/feed.json","title":"𝓛𝓮𝓸 𝓑𝓛𝓸𝓖 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://liaorenhua.github.io/blog_postgraduate/blog_postgraduate/rss.xml","title":"𝓛𝓮𝓸 𝓑𝓛𝓸𝓖 RSS Feed"}]]},"headers":[{"level":2,"title":"API 文档","slug":"api-文档","link":"#api-文档","children":[]}],"git":{"createdTime":1736126247000,"updatedTime":1736218734000,"contributors":[{"name":"liao_rh","username":"liao_rh","email":"993929808@qq.com","commits":3,"url":"https://github.com/liao_rh"}]},"readingTime":{"minutes":0.59,"words":178},"filePathRelative":"code/mini-app/guide/ability/storage.md","localizedDate":"2020年10月9日","excerpt":"<p>每个微信小程序都可以有自己的本地缓存，可以通过 <code>wx.setStorage</code> / <code>wx.setStorageSync</code>、<code>wx.getStorage</code> / <code>wx.getStorageSync</code>、<code>wx.clearStorage</code> / <code>wx.clearStorageSync</code>，<code>wx.removeStorage</code> / <code>wx.removeStorageSync</code> 对本地缓存进行读写和清理。</p>\\n<p>同一个微信用户，同一个小程序 storage 上限为 10MB。Storage 以用户维度隔离，同一台设备上，A 用户无法读取到 B 用户的数据。</p>\\n","autoDesc":true}');export{h as comp,y as data};
